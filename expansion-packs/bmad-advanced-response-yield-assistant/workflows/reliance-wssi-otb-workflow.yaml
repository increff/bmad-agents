# ARYA Reliance WSSI → OTB Workflow
# Complete WSSI Snapshot Lifecycle to OTB Value Submission Flow
# WSSI (Weekly Sales & Stock Intelligence) → OTB (Open-to-Buy) flow for Reliance environment

name: "reliance-wssi-otb-workflow"
version: "1.0.0"
description: "Complete WSSI snapshot lifecycle to OTB workflow for Reliance environment with environment-specific intelligence"

# Environment Configuration
environment: "reliance"
base_branches:
  irisx-algo: "master-ril"
  ms-mfp: "release-ril"
  irisx-config: "master-ril"
  ms-loadapis: "caas-ril-uploads"

# Workflow Phases
phases:
  - name: "Environment Setup & Validation"
    steps:
      - name: "Switch to Reliance Base Branches"
        command: "*switch-to-base-branches"
        description: "Switch all repositories to Reliance environment base branches"
        validation:
          - "irisx-algo on master-ril"
          - "ms-mfp on release-ril"
          - "irisx-config on master-ril"
          - "ms-loadapis on caas-ril-uploads"
      
      - name: "Validate Reliance Environment"
        command: "*validate-environment"
        description: "Validate Reliance environment configuration and access"
        validation:
          - "Environment-specific configurations loaded"
          - "Repository access verified"
          - "Reliance-specific patterns recognized"

  - name: "LoadAPIs Data Loading"
    steps:
      - name: "Load Data from LoadAPIs"
        command: "*load-data-from-loadapis"
        description: "Load data from ms-loadapis (caas-ril-uploads) for Reliance environment"
        inputs:
          - "LoadAPIs repository access"
          - "Reliance environment configuration"
          - "Data source specifications"
        outputs:
          - "Raw data loaded from LoadAPIs"
          - "Data validation results"
          - "LoadAPIs processing metrics"

      - name: "Validate LoadAPIs Data"
        command: "*validate-loadapis-data"
        description: "Validate data loaded from LoadAPIs for quality and completeness"
        inputs:
          - "Raw LoadAPIs data"
          - "Data quality standards"
          - "Reliance environment rules"
        outputs:
          - "Data quality validation"
          - "Completeness verification"
          - "Data format validation"

  - name: "WSSI Snapshot Creation"
    steps:
      - name: "Create WSSI Snapshot"
        command: "*create-wssi-snapshot"
        description: "Create WSSI snapshot with data preparation and initial KPI calculations"
        inputs:
          - "WSSI algorithm output data"
          - "Periods configuration data"
          - "Reliance environment constraints"
        outputs:
          - "WSSI snapshot created"
          - "Version details stored"
          - "Initial audit record created"

      - name: "Prepare Snapshot Data"
        command: "*prepare-snapshot-data"
        description: "Prepare snapshot data from base algorithm output with comments"
        inputs:
          - "Base algorithm output"
          - "Snapshot configuration"
          - "Comments generation rules"
        outputs:
          - "Snapshot data prepared"
          - "Comments data generated"
          - "Data uploaded to Azure Data Lake"

  - name: "KPI Calculations and Processing"
    steps:
      - name: "Calculate Core KPIs"
        command: "*calculate-wssi-kpis"
        description: "Calculate essential KPIs (MRP, COGS, margins, ASP, discount percentages)"
        inputs:
          - "Snapshot data"
          - "KPI calculation formulas"
          - "Reliance business rules"
        outputs:
          - "COGS calculations completed"
          - "MRP calculations completed"
          - "Margin calculations completed"
          - "ASP and discount percentages calculated"

      - name: "Calculate Inventory KPIs"
        command: "*calculate-inventory-kpis"
        description: "Calculate inventory-related KPIs (cover duration, target inventory, OTB inwards)"
        inputs:
          - "Core KPI results"
          - "Inventory calculation rules"
          - "Sequential calculation dependencies"
        outputs:
          - "Cover duration calculated"
          - "Target inventory quantity calculated"
          - "OTB inwards calculated"
          - "Inventory COGS calculated"

      - name: "Process KPI Dependencies"
        command: "*process-kpi-dependencies"
        description: "Process KPIs in correct order based on dependencies"
        inputs:
          - "KPI dependency mapping"
          - "Calculation sequence rules"
          - "Data validation requirements"
        outputs:
          - "First level KPIs processed"
          - "Second level KPIs processed"
          - "UI calculated KPIs initialized"

  - name: "Stage Movement and Lifecycle Management"
    steps:
      - name: "Manage Snapshot Stages"
        command: "*manage-snapshot-stages"
        description: "Manage stage transitions (NEW → DRAFT → APPROVED → SUBMITTED)"
        inputs:
          - "Current stage information"
          - "User permissions"
          - "Stage transition rules"
        outputs:
          - "Stage validation completed"
          - "Permission checks verified"
          - "Stage transitions logged"

      - name: "Track User Operations"
        command: "*track-user-operations"
        description: "Track every user operation on UI with comprehensive audit records"
        inputs:
          - "User operation details"
          - "UI interaction data"
          - "Audit trail requirements"
        outputs:
          - "User operations tracked"
          - "Audit records created"
          - "Status updates logged"

  - name: "Data Processing and Transformations"
    steps:
      - name: "Process Data Filtering"
        command: "*process-data-filtering"
        description: "Apply user-selected filters and data transformations"
        inputs:
          - "User filter selections"
          - "Data filtering rules"
          - "Transformation requirements"
        outputs:
          - "Data filtering applied"
          - "Wide format conversion completed"
          - "Subperiod processing completed"

      - name: "Generate WSSI Views"
        command: "*generate-wssi-views"
        description: "Generate filtered WSSI views and subperiod-specific views"
        inputs:
          - "Filtered data"
          - "View generation rules"
          - "Comments integration requirements"
        outputs:
          - "WSSI views created"
          - "Subperiod views generated"
          - "Filter management implemented"
          - "Comments integrated"

  - name: "OTB Code Generation and Budget Validity"
    steps:
      - name: "Generate OTB Codes"
        command: "*generate-otb-codes"
        description: "Generate unique OTB codes using business rules with budget validity"
        inputs:
          - "Approved snapshot data"
          - "OTB code generation rules"
          - "Budget validity requirements"
        outputs:
          - "OTB codes generated"
          - "Budget validity calculated"
          - "Margin calculations completed"
          - "Data formatted for downstream systems"

      - name: "Calculate Budget Validity"
        command: "*calculate-budget-validity"
        description: "Calculate budget validity periods based on drop month"
        inputs:
          - "Drop month information"
          - "Year and season details"
          - "Budget calculation rules"
        outputs:
          - "Budget valid from calculated"
          - "Budget valid till calculated"
          - "Date format validation completed"

  - name: "Pipeline Submission and Tracking"
    steps:
      - name: "Submit OTB Values"
        command: "*submit-otb-values"
        description: "Submit OTB values to ETL pipeline with comprehensive audit tracking"
        inputs:
          - "OTB code view data"
          - "Pipeline parameters"
          - "Audit trail requirements"
        outputs:
          - "Pre-submission validation completed"
          - "Pipeline parameters assembled"
          - "WSSI pipeline triggered"
          - "Audit records created"

      - name: "Monitor Pipeline Status"
        command: "*monitor-pipeline-status"
        description: "Track pipeline status from PROCESSING to SUCCESS/FAILED"
        inputs:
          - "Pipeline execution details"
          - "Status monitoring configuration"
          - "Error handling rules"
        outputs:
          - "Pipeline status tracked"
          - "Status synchronization completed"
          - "Error handling implemented"
          - "Notification management configured"

  - name: "Comprehensive Audit Management"
    steps:
      - name: "Track Comprehensive Audit"
        command: "*track-comprehensive-audit"
        description: "Maintain complete audit trail for all operations"
        inputs:
          - "User operation data"
          - "Stage change information"
          - "Data modification details"
          - "Pipeline execution data"
        outputs:
          - "User operation tracking completed"
          - "Stage change audit logged"
          - "Data modification audit maintained"
          - "Pipeline audit recorded"
          - "Error audit captured"

  - name: "Scheduler Integration and Monitoring"
    steps:
      - name: "Configure Background Scheduler"
        command: "*configure-background-scheduler"
        description: "Set up APScheduler for pipeline status monitoring"
        inputs:
          - "Scheduler configuration"
          - "Monitoring intervals"
          - "Error handling rules"
        outputs:
          - "Background scheduler configured"
          - "Pipeline status monitoring active"
          - "Status synchronization enabled"
          - "Error handling configured"

  - name: "Cross-Repository Integration"
    steps:
      - name: "Integrate Algorithm Repository"
        command: "*integrate-algorithm-repository"
        description: "Integrate with irisx-algo for business logic and calculations"
        inputs:
          - "Algorithm repository patterns"
          - "Business logic requirements"
          - "Reliance-specific algorithms"
        outputs:
          - "Algorithm integration completed"
          - "Business logic integrated"
          - "Calculation modules connected"
          - "Validation rules applied"

      - name: "Integrate Configuration Repository"
        command: "*integrate-configuration-repository"
        description: "Integrate with irisx-config for SQL views and templates"
        inputs:
          - "Configuration repository patterns"
          - "SQL view requirements"
          - "Template management needs"
        outputs:
          - "Configuration integration completed"
          - "SQL views integrated"
          - "Template management connected"
          - "Configuration management implemented"

      - name: "Integrate MFP Repository"
        command: "*integrate-mfp-repository"
        description: "Integrate with ms-mfp for WSSI views and services"
        inputs:
          - "MFP repository patterns"
          - "WSSI view requirements"
          - "Service integration needs"
        outputs:
          - "MFP integration completed"
          - "WSSI views integrated"
          - "Service layers connected"
          - "Database operations integrated"

  - name: "Quality Assurance and Validation"
    steps:
      - name: "Validate WSSI-OTB Data Flow"
        command: "*validate-wssi-otb-flow"
        description: "Validate complete data flow from WSSI snapshot to OTB submission"
        inputs:
          - "WSSI snapshot data"
          - "OTB submission data"
          - "Data flow requirements"
        outputs:
          - "Data flow validation completed"
          - "Quality metrics generated"
          - "Performance metrics captured"

      - name: "Validate Reliance Environment Compliance"
        command: "*validate-reliance-compliance"
        description: "Validate implementation against Reliance environment requirements"
        inputs:
          - "Implementation results"
          - "Reliance environment rules"
          - "Business requirements"
        outputs:
          - "Compliance validation completed"
          - "Environment-specific metrics generated"
          - "Business rule validation completed"

      - name: "Run Comprehensive Tests"
        command: "*run-comprehensive-tests"
        description: "Run comprehensive test suite for WSSI-OTB workflow"
        inputs:
          - "Implementation results"
          - "Test scenarios"
          - "Reliance environment data"
        outputs:
          - "Test results generated"
          - "Coverage metrics captured"
          - "Performance benchmarks established"

  - name: "Documentation and Deployment"
    steps:
      - name: "Generate WSSI-OTB Documentation"
        command: "*generate-wssi-otb-documentation"
        description: "Generate comprehensive documentation for WSSI-OTB workflow"
        inputs:
          - "Implementation results"
          - "KPI calculation formulas"
          - "Reliance environment specifics"
        outputs:
          - "Technical documentation generated"
          - "User guides created"
          - "API documentation completed"

      - name: "Deploy to Reliance Environment"
        command: "*deploy-to-reliance-environment"
        description: "Deploy implementation to Reliance environment"
        inputs:
          - "Validated implementation"
          - "Reliance environment configuration"
          - "Deployment scripts"
        outputs:
          - "Deployment confirmation received"
          - "Environment validation completed"
          - "Monitoring setup configured"

# Expert Agent Delegation
expert_delegation:
  wssi_snapshot_analysis:
    agent: "mfp-pattern-expert"
    commands:
      - "*analyze-wssi-snapshot-patterns"
      - "*create-wssi-snapshot"
      - "*calculate-wssi-kpis"
  
  otb_implementation:
    agent: "mfp-pattern-expert"
    commands:
      - "*generate-otb-codes"
      - "*calculate-budget-validity"
      - "*submit-otb-values"
  
  algorithm_integration:
    agent: "algorithm-pattern-expert"
    commands:
      - "*analyze-algorithm-patterns"
      - "*implement-business-logic"
      - "*validate-algorithm-integration"
  
  configuration_management:
    agent: "config-pattern-expert"
    commands:
      - "*create-sql-views"
      - "*generate-templates"
      - "*validate-configuration"
  
  loadapis_integration:
    agent: "loadapis-pattern-expert"
    commands:
      - "*load-data-from-loadapis"
      - "*validate-loadapis-data"
      - "*analyze-loadapis-patterns"
      - "*validate-loadapis-integration"

# Quality Gates
quality_gates:
  - name: "Environment Validation Gate"
    criteria:
      - "Reliance environment properly configured"
      - "All repositories on correct base branches"
      - "Environment-specific access verified"
  
  - name: "LoadAPIs Data Loading Gate"
    criteria:
      - "Data successfully loaded from LoadAPIs"
      - "LoadAPIs data quality validated"
      - "Data processing completed"
  
  - name: "WSSI Snapshot Creation Gate"
    criteria:
      - "WSSI snapshot created successfully"
      - "Version details stored correctly"
      - "Initial audit records created"
  
  - name: "KPI Calculations Gate"
    criteria:
      - "All KPI calculations completed accurately"
      - "Dependencies processed correctly"
      - "Data validation passed"
  
  - name: "Stage Management Gate"
    criteria:
      - "Stage transitions working correctly"
      - "User operations tracked comprehensively"
      - "Audit trail maintained"
  
  - name: "OTB Code Generation Gate"
    criteria:
      - "OTB codes generated successfully"
      - "Budget validity calculated correctly"
      - "Margin calculations accurate"
  
  - name: "Pipeline Submission Gate"
    criteria:
      - "OTB values submitted successfully"
      - "Pipeline status monitoring active"
      - "Audit trail complete"
  
  - name: "Quality Assurance Gate"
    criteria:
      - "All tests passing"
      - "Reliance environment compliance verified"
      - "Performance requirements met"
  
  - name: "Deployment Gate"
    criteria:
      - "Documentation complete"
      - "Deployment successful"
      - "Monitoring configured"

# Success Criteria
success_criteria:
  technical:
    - "WSSI snapshot lifecycle implemented correctly"
    - "KPI calculations accurate with proper formulas"
    - "OTB code generation working with budget validity"
    - "Pipeline submission and monitoring functional"
    - "Cross-repository integration working seamlessly"
    - "Reliance environment compliance maintained"
  
  business:
    - "WSSI snapshot requirements fully addressed"
    - "OTB value submission capabilities enhanced"
    - "Stage management workflow implemented"
    - "Comprehensive audit trail maintained"
    - "Reliance-specific business rules implemented"
    - "User experience improved"
  
  quality:
    - "All quality gates passed"
    - "Comprehensive testing completed"
    - "Documentation complete and accurate"
    - "Performance requirements satisfied"
    - "Mathematical formulations validated"

# Error Handling
error_handling:
  environment_errors:
    - "Invalid Reliance environment configuration"
    - "Repository access issues"
    - "Base branch alignment problems"
  
  loadapis_errors:
    - "LoadAPIs data loading failures"
    - "Data quality validation issues"
    - "LoadAPIs processing errors"
  
  wssi_errors:
    - "WSSI snapshot creation failures"
    - "KPI calculation errors"
    - "Stage transition issues"
    - "Data transformation failures"
  
  otb_errors:
    - "OTB code generation failures"
    - "Budget validity calculation errors"
    - "Pipeline submission issues"
    - "Audit trail errors"
  
  integration_errors:
    - "Cross-repository integration failures"
    - "Data flow interruptions"
    - "Consistency violations"

# Recovery Procedures
recovery_procedures:
  environment_recovery:
    - "Rollback to previous environment state"
    - "Re-validate environment configuration"
    - "Restore repository states"
  
  implementation_recovery:
    - "Rollback to last successful implementation"
    - "Re-run failed implementation steps"
    - "Validate partial implementations"
  
  loadapis_recovery:
    - "Re-run LoadAPIs data loading"
    - "Validate LoadAPIs data quality"
    - "Restore LoadAPIs processing state"
  
  data_recovery:
    - "Restore from last known good state"
    - "Re-run data transformations"
    - "Validate data integrity"
  
  pipeline_recovery:
    - "Re-submit pipeline with corrected parameters"
    - "Reset pipeline status"
    - "Restore audit trail consistency"

# Monitoring and Analytics
monitoring:
  performance_metrics:
    - "LoadAPIs data loading time"
    - "WSSI snapshot creation time"
    - "KPI calculation processing time"
    - "OTB code generation time"
    - "Pipeline submission time"
    - "Cross-repository integration time"
    - "Overall workflow execution time"
  
  quality_metrics:
    - "LoadAPIs data quality scores"
    - "KPI calculation accuracy"
    - "OTB code generation success rate"
    - "Pipeline submission success rate"
    - "Integration success rate"
    - "Reliance compliance score"
  
  business_metrics:
    - "WSSI snapshot requirement coverage"
    - "OTB value submission improvement"
    - "Stage management efficiency"
    - "Audit trail completeness"
    - "User satisfaction scores"
    - "Business value delivered"
