# BMAD Feedback & Continuous Learning System Configuration

expansion_pack:
  name: bmad-feedback
  id: bmad-feedback
  version: 1.0.0
  status: production
  availability: standard  # Available across all BMAD expansion packs
  
metadata:
  title: "BMAD Feedback & Continuous Learning System"
  description: "Universal feedback collection and learning system for all BMAD agents"
  author: "BMAD Core Team"
  created: "2024-01-15"
  last_updated: "2024-01-15"
  category: "core-infrastructure"
  tags:
    - feedback
    - learning
    - continuous-improvement
    - knowledge-management
    - quality-assurance

integration:
  type: universal
  compatible_with:
    - bmad-ads-automation
    - bmad-advanced-response-yield-assistant
    - bmad-algorithm-debugger
    - bmad-infrastructure-devops
    - bmad-regression-testing
    - bmad-virtual-intelligent-repository-analysis-transformation
    - all-future-packs
  
  integration_points:
    - agent-level
    - task-level
    - workflow-level
    - implementation-level

agents:
  - name: Feedback Agent
    id: feedback-agent
    file: agents/feedback-agent.md
    icon: üìù
    type: specialist
    capabilities:
      - feedback-collection
      - pattern-analysis
      - learning-integration
      - knowledge-base-updates
      - improvement-suggestions
      - quality-assurance
    
    activation:
      mode: on-demand
      triggers:
        - user-request
        - implementation-failure
        - quality-check-failure
        - pattern-violation
      
    dependencies:
      checklists:
        - feedback-collection-checklist.md
        - learning-improvement-checklist.md
      tasks:
        - collect-feedback.md
        - learn-from-mistake.md
        - analyze-feedback.md
        - create-learning-example.md
        - update-knowledge-base.md
        - generate-improvement-suggestions.md
        - view-feedback-history.md
        - export-learning-data.md
        - clear-feedback-data.md
      data:
        - examples.json
        - feedback-patterns.json
        - learning-history.json

data_storage:
  primary: data/examples.json
  patterns: data/feedback-patterns.json
  history: data/learning-history.json
  
  retention:
    active: 180_days
    archived: 365_days
    
  backup:
    enabled: true
    frequency: daily
    location: data/backups/

features:
  feedback_collection:
    enabled: true
    interactive: true
    auto_analysis: true
    
  pattern_recognition:
    enabled: true
    min_samples: 3
    confidence_threshold: 0.7
    
  learning_integration:
    enabled: true
    auto_update_knowledge_base: true
    
  improvement_suggestions:
    enabled: true
    auto_prioritization: true
    
  data_export:
    enabled: true
    formats:
      - json
      - csv
      - excel
      - html
      - pdf

quality_metrics:
  track:
    - feedback_count
    - pattern_frequency
    - improvement_implementation_rate
    - mistake_reduction_rate
    - agent_performance_improvement
    
  success_criteria:
    min_feedback_quality_score: 0.8
    max_pattern_recurrence: 3
    min_improvement_rate: 0.2

workflows:
  feedback_collection:
    steps:
      - issue_identification
      - context_collection
      - solution_documentation
      - learning_integration
      - pattern_analysis
      - improvement_suggestion
    
  pattern_analysis:
    steps:
      - data_collection
      - pattern_extraction
      - frequency_analysis
      - root_cause_analysis
      - prevention_strategy_creation
    
  knowledge_base_update:
    steps:
      - learning_extraction
      - knowledge_classification
      - knowledge_base_update
      - pattern_library_update
      - agent_guidelines_update

integration_examples:
  virat:
    usage: |
      # In VIRAT workflow - Phase 6: Learning & Feedback Collection
      commands:
        - collect-feedback: Invoke feedback agent at implementation end
        - review-learnings: Load relevant past learnings before implementation
        - apply-learnings: Apply learnings to current implementation approach
    
  custom_agent:
    usage: |
      # In any custom agent
      dependencies:
        agents:
          - ../bmad-feedback/agents/feedback-agent.md
      commands:
        - collect-feedback: Collect feedback when issues encountered

documentation:
  readme: README.md
  quickstart: QUICKSTART.md
  integration_guide: docs/INTEGRATION_GUIDE.md
  
  checklists:
    - checklists/feedback-collection-checklist.md
    - checklists/learning-improvement-checklist.md

support:
  contact: bmad-core-team
  documentation: README.md
  examples: QUICKSTART.md
  issues: Use feedback system itself for issues

license:
  type: BMAD‚Ñ¢ Core
  ecosystem: Brownfield Multi-Agent Development

notes: |
  This expansion pack is designed as a STANDARD COMPONENT that should be
  integrated into ALL BMAD expansion packs to enable continuous learning
  and improvement across the entire ecosystem.
  
  Key Benefits:
  - Universal feedback collection across all agents
  - Automatic pattern recognition and learning
  - Continuous agent performance improvement
  - Knowledge accumulation and sharing
  - Data-driven quality assurance

