name: notion-list-workflow
version: 1.0.0
description: "Automated workflow to list requirements from Notion database"

# Workflow metadata
metadata:
  author: "BMAD Notion Integration"
  category: "data-retrieval"
  tags: ["notion", "list", "requirements", "query"]

# Workflow inputs
inputs:
  limit:
    type: number
    description: "Maximum number of results to return"
    required: false
    default: 20
  
  detailed:
    type: boolean
    description: "Show detailed information for each requirement"
    required: false
    default: false
  
  filter_type:
    type: string
    description: "Filter type (status, priority, lead, stage)"
    required: false
    enum: ["status", "priority", "lead", "stage"]
  
  filter_value:
    type: string
    description: "Filter value to match"
    required: false
  
  search:
    type: string
    description: "Search term for requirement ID or title"
    required: false

# Environment configuration
environment:
  load_from: ".env"
  required_vars:
    - NOTION_API_KEY
    - NOTION_DATABASE_ID

# Workflow steps
steps:
  - name: validate-environment
    description: "Validate environment variables"
    action: validate-env
    inputs:
      required:
        - NOTION_API_KEY
        - NOTION_DATABASE_ID
    on_error: fail

  - name: build-query
    description: "Build Notion database query with filters"
    action: build-query
    inputs:
      limit: "{{inputs.limit}}"
      filter_type: "{{inputs.filter_type}}"
      filter_value: "{{inputs.filter_value}}"
      search: "{{inputs.search}}"
    outputs:
      query: "notion_query"

  - name: fetch-requirements
    description: "Fetch requirements from Notion database"
    action: execute-script
    script: "scripts/notion-list.js"
    args:
      - "--limit"
      - "{{inputs.limit}}"
    flags:
      detailed: "{{inputs.detailed}}"
      filter: "{{inputs.filter_type}} {{inputs.filter_value}}"
      search: "{{inputs.search}}"
    on_error: fail

  - name: parse-results
    description: "Parse and format query results"
    action: parse-results
    inputs:
      raw_results: "{{steps.fetch-requirements.output}}"
      format: "table"
    outputs:
      formatted_results: "results"
      count: "result_count"

  - name: display-results
    description: "Display formatted results"
    action: display
    inputs:
      content: "{{steps.parse-results.outputs.formatted_results}}"
      format: "table"

  - name: save-results
    description: "Save results to file"
    action: save-json
    file: "docs/.notion-list-cache.json"
    content:
      query: "{{steps.build-query.outputs.query}}"
      results: "{{steps.parse-results.outputs.results}}"
      count: "{{steps.parse-results.outputs.count}}"
      timestamp: "{{timestamp}}"

# Outputs
outputs:
  result_count:
    value: "{{steps.parse-results.outputs.count}}"
    description: "Number of requirements returned"
  
  results_file:
    value: "docs/.notion-list-cache.json"
    description: "Cached results file"
  
  formatted_output:
    value: "{{steps.parse-results.outputs.formatted_results}}"
    description: "Formatted results"

# Success criteria
success:
  conditions:
    - step: fetch-requirements
      status: success
  message: "✅ Retrieved {{outputs.result_count}} requirements from Notion"

# Failure handling
failure:
  actions:
    - log_error: true
  message: "❌ Failed to retrieve requirements from Notion"

